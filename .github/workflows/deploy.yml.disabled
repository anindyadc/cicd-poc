name: Deploy to ECS

on:
  push:
    branches:
      - prod

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_ACTIVITY_REPO: ${{ secrets.ECR_ACTIVITY_REPO }}
  ECR_ATTENDANCE_REPO: ${{ secrets.ECR_ATTENDANCE_REPO }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER_NAME }}
  ACTIVITY_SERVICE: ${{ secrets.ACTIVITY_SERVICE_NAME }}
  ATTENDANCE_SERVICE: ${{ secrets.ATTENDANCE_SERVICE_NAME }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  deploy:
    name: Build & Deploy to ECS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | \
        docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and push ACTIVITY image
      run: |
        docker build -t $ECR_ACTIVITY_REPO ./activity
        docker tag $ECR_ACTIVITY_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_ACTIVITY_REPO:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_ACTIVITY_REPO:latest

    - name: Build and push ATTENDANCE image
      run: |
        docker build -t $ECR_ATTENDANCE_REPO ./attendance
        docker tag $ECR_ATTENDANCE_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_ATTENDANCE_REPO:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_ATTENDANCE_REPO:latest

    - name: Deploy Activity to ECS
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ACTIVITY_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION

    - name: Deploy Attendance to ECS
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ATTENDANCE_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION