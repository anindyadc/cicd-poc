AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate POC with ALB forwarding to /activity and /attendance

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: cicd-poc-cluster

  ActivityTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: activity-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: activity
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/activity-repo:latest"
          PortMappings:
            - ContainerPort: 3000

  AttendanceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: attendance-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: attendance
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/attendance-repo:latest"
          PortMappings:
            - ContainerPort: 3000

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecsTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: cicd-poc-alb
      Subnets: !Ref SubnetIds
      SecurityGroups: []
      Scheme: internet-facing
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 404
            ContentType: text/plain
            MessageBody: Not Found

  ActivityTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: activity-tg
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /activity

  AttendanceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: attendance-tg
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /attendance

  ListenerRuleActivity:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref ALBListener
      Priority: 10
      Conditions:
        - Field: path-pattern
          Values: ["/activity*"]
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ActivityTargetGroup

  ListenerRuleAttendance:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref ALBListener
      Priority: 20
      Conditions:
        - Field: path-pattern
          Values: ["/attendance*"]
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AttendanceTargetGroup

  ActivityService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ActivityTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups: []
      LoadBalancers:
        - TargetGroupArn: !Ref ActivityTargetGroup
          ContainerName: activity
          ContainerPort: 3000

  AttendanceService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref AttendanceTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups: []
      LoadBalancers:
        - TargetGroupArn: !Ref AttendanceTargetGroup
          ContainerName: attendance
          ContainerPort: 3000

Outputs:
  ALBURL:
    Description: Public URL for the Application Load Balancer
    Value: !Sub "http://${LoadBalancer.DNSName}"